[build-system]
requires = [
    "setuptools>=61.0",
    "wheel",
    "cmake>=3.16",
    "ninja; platform_system != 'Windows'",
    "scikit-build>=0.13.0"
]
build-backend = "setuptools.build_meta"

[project]
name = "openfhe-numpy"
# Use dynamic version from package
dynamic = ["version"]
description = "A NumPy-compatible API for homomorphic encryption operations"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "BSD-3-Clause" }

authors = [
    { name = "Tran Ngo", email = "ngotbtran@gmail.com" }
]

# Classification
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: C++",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Security :: Cryptography",
    "Operating System :: OS Independent",
]

keywords = [
    "homomorphic encryption", "FHE", "machine learning", "privacy", "cryptography"
]

# Core dependencies
dependencies = [
    "numpy>=1.19.0"
]

# Optional dependencies groups
[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "mypy>=0.961",
    "build>=0.8.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
]


[project.urls]
Homepage = "https://github.com/openfheorg/openfhe-numpy"
Source = "https://github.com/openfheorg/openfhe-numpy"
Issues = "https://github.com/openfheorg/openfhe-numpy/issues"


[tool.setuptools]
# Use automatic package discovery
package-dir = {"" = "."}
packages = ["openfhe_numpy"]

[tool.setuptools.dynamic]
version = { attr = "openfhe_numpy._version.__version__" }

[tool.setuptools.package-data]
openfhe_numpy = [
    "*.py",
    "operations/*.py",
    "utils/*.py",
    "*.so",    # Include compiled extensions
    "*.pyd",   # Windows extensions
]

[tool.scikit-build]
cmake.minimum-version = "3.16"
cmake.build-type = "Release"
cmake.verbose = false
cmake.source-dir = "."
cmake.build-dir = "build"
cmake.args = ["-DCMAKE_POSITION_INDEPENDENT_CODE=ON"]  # Ensure PIC code
wheel.expand-macos-universal-tags = true

# Keep the rest of your development tool configurations
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"