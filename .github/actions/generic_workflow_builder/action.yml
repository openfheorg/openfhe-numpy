name: 'Generic Workflow Builder'
description: 'A custom GitHub actions pipeline that wrappedup build, unit_test, benchmark and extract stages'
  
inputs:
  module_name:
    description: 'Name of the module'
    required: true
  openfhe_development_branch:
    description: 'openfhe-development branch for testing'
    required: true
  openfhe_python_branch:
    description: 'openfhe-python branch for testing'
    required: true
  cmake_args_openfhe_lib:
    description: 'Argument for cmake command'
    required: true

runs:
  using: "composite"
  steps:
    #####################################################################################
    - name: '${{ inputs.module_name }}_print_input'
      shell: bash
      run: |
        # pwd
        echo "======> step ${{ inputs.module_name }}_print_input"

        # Debugging use only
        echo "Input values:
        module_name=${{inputs.module_name}}
        openfhe_development_branch=${{inputs.openfhe_development_branch}}
        openfhe_python_branch=${{inputs.openfhe_python_branch}}
        openfhe_numpy_branch=${{github.ref_name}}
        "
    #####################################################################################
    - name: '${{ inputs.module_name }}_cleanup'
      shell: bash
      run: |
        # pwd
        echo "======> step ${{ inputs.module_name }}_cleanup"

        #### TODO: ============>>> UNINSTALL openfhe and openfhe-numpy or simply delete (?) the local virtual python environment !!!!!!!!!!!!!!!!!!!!

        ONP_PACKAGER_DIR="$PWD/openfhe-numpy-packager"
        echo "ONP_PACKAGER_DIR=$ONP_PACKAGER_DIR"
        echo "ONP_PACKAGER_DIR=$ONP_PACKAGER_DIR" >> $GITHUB_ENV
        if [ -d "$ONP_PACKAGER_DIR" ]; then
          rm -Rf $ONP_PACKAGER_DIR;
        fi

        #### TODO: check if this is needed. We should use the one in $ONP_PACKAGER_DIR only

        ONP_BUILD_ENV_DIR="$PWD/env_for_openfhe_numpy_wheel"
        echo "ONP_BUILD_ENV_DIR=$ONP_BUILD_ENV_DIR"
        echo "ONP_BUILD_ENV_DIR=$ONP_BUILD_ENV_DIR" >> $GITHUB_ENV
        if [ -d "$ONP_BUILD_ENV_DIR" ]; then
          rm -Rf $ONP_BUILD_ENV_DIR;
        fi

    # #####################################################################################
    # - name: '${{ inputs.module_name }}_set_environment'
    #   shell: bash
    #   run: |
    #     # pwd
    #     echo "======> step ${{ inputs.module_name }}_set_environment"

    #     #################################################################################
    #     # we can not install "pybind11[global]" and pytest on an AWS instance directly.
    #     # It is strongly recommended to use a virtual environment for that: https://pip.pypa.io/warnings/venv
    #     # so, we will have to use a virtual environment then...
    #     #################################################################################
    #     ### 1. create a virtual environment if it doesn't exist
    #     if [ ! -d "openfhe-python-env" ]; then
    #         python3 -m venv openfhe-python-env
    #     fi

    #     ### 2. activate the virtual environment
    #     source openfhe-python-env/bin/activate

    #     ### 3. install "pybind11[global]"
    #     pip install "pybind11[global]"

    #     ### 4. install pytest if it is not installed
    #     if ! command -v pytest &> /dev/null; then
    #         pip install pytest
    #     fi

    #####################################################################################
    - name: '${{ inputs.module_name }}_build_openfhe_numpy'
      shell: bash
      run: |
        # pwd
        echo "======> step ${{ inputs.module_name }}_build_openfhe_numpy"

        git clone https://github.com/openfheorg/openfhe-numpy-packager.git
        cd $ONP_PACKAGER_DIR

        # update ci-vars.sh:
        sed -i \
            -e "s/^OPENFHE_TAG=.*/OPENFHE_TAG=${{inputs.openfhe_development_branch}}/" \
            -e "s/^OPENFHE_PYTHON_TAG=.*/OPENFHE_PYTHON_TAG=${{inputs.openfhe_python_branch}}/" \
            -e "s/^OPENFHE_NUMPY_TAG=.*/OPENFHE_NUMPY_TAG=${{github.ref_name}}/" \
            ./ci-vars.sh

        echo "=== ci-vars.sh ==="
        cat ./ci-vars.sh
        echo "==================="

        ./build_openfhe_numpy_wheel.sh

        # pip install ./build/dist/*.whl
    #####################################################################################
    # - name: '${{ inputs.module_name }}_tests'
    #   shell: bash
    #   run: |
    #     # pwd
    #     echo "======> step ${{ inputs.module_name }}_tests"

    #     ### activate the virtual environment
    #     source openfhe-python-env/bin/activate

    #     ### set LD_LIBRARY_PATH and PYTHONPATH
    #     export LD_LIBRARY_PATH=${INSTALL_DIR}/lib
    #     export PYTHONPATH=${LD_LIBRARY_PATH}:${INSTALL_DIR}:${PYTHONPATH}
    #     echo "LD_LIBRARY_PATH=${LD_LIBRARY_PATH}"
    #     echo "PYTHONPATH=${PYTHONPATH}"

    #     cd tests
    #     pytest *.py

    #     ### deactivate the virtual environment
    #     deactivate
    # #####################################################################################
    # - name: '${{ inputs.module_name }}_final_cleanup'
    #   shell: bash
    #   run: |
    #     pwd
    #     rm -rf ${BUILD_DIR}
    #     rm -rf ${OPENFHE_DIR}
    #     rm -rf ${INSTALL_DIR}
