##############################################################################################
### NOTE: try not to change this file at all. Everything can be controlled by input parameters
###       passed to this reuseable workflow from the wrapper workflow.
###       The only hardcoded value here is the location to the builder.
##############################################################################################
name: Reuseable Generic Workflow

on:
  workflow_call:
    inputs:
      runner:
        description: 'Runner tag'
        type: string
        required: true
      compiler:
        description: 'Compiler type'
        type: string
        required: true
      openfhe_development_branch:
        description: 'openfhe-development branch'
        type: string
        required: true
      openfhe_python_branch:
        description: 'openfhe_python_branch'
        type: string
        required: true
      cmake_args_map_openfhe_lib:
        description: 'Cmake args by job name (json string)'
        type: string
        required: true
          
jobs:
  init:
    runs-on: ${{ inputs.runner }}
    outputs:
      compiler: ${{ steps.compiler.outputs.compiler_args }}
      openmp_flag: ${{ steps.openmp.outputs.openmp_flag }}
    steps:
      - name: Print input parmeters
        id: print_values
        run: |
          echo "===================== INPUT ======================="
          echo "runner                     : ${{ inputs.runner }}"
          echo "compiler                   : ${{ inputs.compiler }}"
          echo "openfhe_development_branch : ${{ inputs.openfhe_development_branch }}"
          echo "openfhe_python_branch      : ${{ inputs.openfhe_python_branch }}"
          echo "cmake_args_map_openfhe_lib : ${{ inputs.cmake_args_map_openfhe_lib }}"
          echo "==================================================="

      - name: Get compiler as args for cmake
        id: compiler
        run: echo "compiler_args=${{ fromJson(env.COMPILERS_MAP)[inputs.compiler] }}" >> $GITHUB_OUTPUT
        env:
          # JSON map to convert input Compiler Type to a string with cmake arguments to set the compiler for C and C++
          COMPILERS_MAP: >-
            {
              "GCC-14"    : "-DCMAKE_CXX_COMPILER=/usr/bin/g++-14 -DCMAKE_C_COMPILER=/usr/bin/gcc-14",
              "CLANG-18"  : "-DCMAKE_CXX_COMPILER=/usr/bin/clang++-18 -DCMAKE_C_COMPILER=/usr/bin/clang-18",
            }

    
  ###############################################
  #
  #    default jobs starts here
  #
  ###############################################
  default:
    needs: init
    runs-on: ${{ inputs.runner }}
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Print parameters passed to .github/actions
      run: |
        echo "runs-on:     ${{ inputs.runner }}"
        echo "module_name: ${{ github.job }}"
        echo "openfhe_development_branch: ${{ inputs.openfhe_development_branch }}"
        echo "openfhe_python_branch: ${{ inputs.openfhe_python_branch }}"
        # echo "cmake_args_openfhe_lib:  ${{ needs.init.outputs.compiler }} ${{ fromJson(inputs.cmake_args_map_openfhe_lib)[github.job] }} ${{ needs.init.outputs.openmp_flag }}"

    - name: ${{ github.job }}
      uses: openfheorg/openfhe-numpy/.github/actions/generic_workflow_builder@github-ci
      with:
        module_name: ${{ github.job }}
        openfhe_development_branch: ${{ inputs.openfhe_development_branch }}
        openfhe_python_branch: ${{ inputs.openfhe_python_branch }}
        cmake_args_openfhe_lib: "${{ needs.init.outputs.compiler }} ${{ fromJson(inputs.cmake_args_map_openfhe_lib)[github.job] }} ${{ needs.init.outputs.openmp_flag }}"

